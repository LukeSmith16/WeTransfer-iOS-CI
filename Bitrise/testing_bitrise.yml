---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- pull_request_source_branch: "*"
  workflow: wetransfer_pr_testing
workflows:
  wetransfer_pr_testing:
    steps:
    - script:
        title: Assign PR author
        inputs:
        - content: |-
            #!/bin/bash

            REPOSITORY_NAME=$(cut -d '.' -f1 <<< $(cut -d '/' -f2 <<< ${GIT_REPOSITORY_URL}))
            ISSUE_URL="https://api.github.com/repos/${BITRISEIO_GIT_REPOSITORY_OWNER}/${REPOSITORY_NAME}/issues/${BITRISE_PULL_REQUEST}"
            HEADER="Accept: application/vnd.github.v3+json"

            PR_ASSIGNESS=$(
              curl \
                -s \
                -u ${GITBUDDY_ACCESS_TOKEN} \
                -H ${HEADER} \
                ${ISSUE_URL} \
                | jq -r '.assignees[] | .login'
            )

            if [ -z ${PR_ASSIGNESS} ]; then
              echo "PR assignees is empty. Continuing..."
            else
              echo "PR assignees is not empty. Nothing to do here..."
              exit 0
            fi

            PR_AUTHOR=$(
              curl \
                -s \
                -u ${GITBUDDY_ACCESS_TOKEN} \
                -H ${HEADER} \
                ${ISSUE_URL} \
                | jq -r .user.login
            )

            curl \
              -s \
              -u ${GITBUDDY_ACCESS_TOKEN} \
              -X POST \
              -H ${HEADER} \
              ${ISSUE_URL}/assignees \
              -d '{"assignees":["'${PR_AUTHOR}'"]}' \
              &> /dev/null
    - script@1:
        title: Skip running for Draft PRs
        inputs:
        - content: |-
            #!/usr/bin/env bash
            if [ "$GITHUB_PR_IS_DRAFT" = true ] ; then
                echo 'Cancelling CI run since the PR is in draft'
                exit 1
            fi

            if [[ "$BITRISE_GIT_BRANCH" == *"smartling-content"* ]]; then
                echo 'Cancelling CI run since the PR is for translations only'
                exit 1
            fi
    - cache-pull: {}
    - script:
        run_if: .IsCI
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            if [ ! -d "Submodules/WeTransfer-iOS-CI" ] ; then
              # file does not exist - simply exit with success
              exit 0
            fi

            # Get the latest master branch for WeTransfer-iOS-CI if the submodule exists
            git submodule update --remote --no-fetch Submodules/WeTransfer-iOS-CI
        title: Update WeTransfer-iOS-CI submodule
    - script:
        run_if: .IsCI
        title: Force SSH
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # As we work with submodules, make sure we use SSH for this config so we can push our PR later on.
            # See for more info: https://discuss.bitrise.io/t/git-force-to-use-ssh-url-instead-of-https-for-github-com/4384
            # git config --global url."git@github.com:".insteadOf "https://github.com/"
            for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
    - script:
        title: Run Fastlane
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # Use the environment FASTLANE_LANE if available. Otherwise, fallback to "test"
            lane=${FASTLANE_LANE:=test}
            fastlane $lane
    - script:
        title: Run Danger
        deps:
          brew:
          - name: swiftlint
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # debug log
            set -x

            # By changing directory into WeTransfer-iOS-CI, we can run Danger from there.
            # Caching is still done per repository which is why we add the build and cache paths.
            # --cwd makes sure to run Danger in the current repository directory
            # The Dangerfile.swift from within the WeTransfer-iOS-CI repo is used.
            #
            # This all allows us to not define Danger dependencies in every repo. It also optimises reusing the SPM cache on CI systems.

            if [ "$BITRISEIO_GIT_REPOSITORY_SLUG" == "WeTransfer-iOS-CI" ]; then
                swift run danger-swift ci --cache-path .build --build-path .build
            else
                cd Submodules/WeTransfer-iOS-CI
                swift run danger-swift ci --cache-path ../../.build --build-path ../../.build --cwd ../../
            fi
    - deploy-to-bitrise-io@2:
        is_skippable: true
        inputs:
        - notify_user_groups: none
        - is_enable_public_page: 'false'
        - is_compress: 'true'
        - debug_mode: 'true'
        - deploy_path: build/reports/
    - cache-push:
        run_if: true
        inputs:
        - cache_paths: |
            $BITRISE_CACHE_DIR
            .build
            .spm-build
